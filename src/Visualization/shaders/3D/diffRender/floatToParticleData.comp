#version 460 compatibility

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) restrict readonly buffer floatDataSSBO {
	float floatData[];
};

struct ParticleData {
    vec4 posAndSpeed;
	vec4 density;
};

layout(std430, binding = 1) restrict buffer optimizedParticleDataSSBO {
	ParticleData optimizedParticleData[];
};

layout(std430, binding = 2) restrict writeonly buffer particleMovementAbsSSBO {
	float particleMovementAbs[];
};


void main() {
	unsigned int index = gl_LocalInvocationID.x + gl_WorkGroupSize.x * gl_WorkGroupID.x;
	if (index >= optimizedParticleData.length()) {
		return;
	}

	unsigned int floatDataIndex = index * 4;
	vec4 newPosAndSpeed = vec4(floatData[floatDataIndex], floatData[floatDataIndex + 1], floatData[floatDataIndex + 2], floatData[floatDataIndex + 3]);
	particleMovementAbs[index] = length(newPosAndSpeed.xyz - optimizedParticleData[index].posAndSpeed.xyz);
	optimizedParticleData[index].posAndSpeed = newPosAndSpeed;
}