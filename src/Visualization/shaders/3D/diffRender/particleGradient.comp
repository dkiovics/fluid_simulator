#version 460 compatibility

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) restrict readonly buffer adamGradientSSBO {
	float adamGradient[];
};

struct ParticleData {
    vec4 posAndSpeed;
	vec4 density;
};

layout(std430, binding = 1) restrict readonly buffer optimizedParticleDataSSBO {
	ParticleData optimizedParticleData[];
};

struct ParticleGradientData {
	vec4 position;
	vec4 gradient;
};

layout(std430, binding = 2) restrict writeonly buffer optimizedParticleGradientDataSSBO {
	ParticleGradientData optimizedParticleGradientData[];
};


void main() {
	unsigned int index = gl_LocalInvocationID.x + gl_WorkGroupSize.x * gl_WorkGroupID.x;
	if (index >= optimizedParticleData.length()) {
		return;
	}

	unsigned int offset = index * 4;
	vec3 gradient = vec3(adamGradient[offset], adamGradient[offset + 1], adamGradient[offset + 2]);
	vec4 position = vec4(optimizedParticleData[index].posAndSpeed.xyz, 1.0);
	optimizedParticleGradientData[index].position = position;
	optimizedParticleGradientData[index].gradient = vec4(gradient, optimizedParticleData[index].density.x);
}